{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Code 1:\
Count ways to reach the n\'92th stair\
class stairs \{\
\'a0\'a0\'a0\'a0// A simple recursive program to find\
\'a0\'a0\'a0\'a0// n'th fibonacci number\
\'a0\'a0\'a0\'a0static int fib(int n)\
\'a0\'a0\'a0\'a0\{\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0if (n <= 1)\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0return n;\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0return fib(n - 1) + fib(n - 2);\
\'a0\'a0\'a0\'a0\}\
\'a0\
\'a0\'a0\'a0\'a0// Returns number of ways to reach s'th stair\
\'a0\'a0\'a0\'a0static int countWays(int s)\
\'a0\'a0\'a0\'a0\{\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0return fib(s + 1);\
\'a0\'a0\'a0\'a0\}\
\'a0\
\'a0\'a0\'a0\'a0/* Driver program to test above function */\
\'a0\'a0\'a0\'a0public static void main(String args[])\
\'a0\'a0\'a0\'a0\{\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0int s = 4;\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0System.out.println("Number of ways = " + countWays(s));\
\'a0\'a0\'a0\'a0\}\
\} \
\
Dynamic programming:\
class Solution \{\
    public int climbStairs(int n) \{\
        int storeCountAtStepi[] = new int[n+1];\
        return count(n, storeCountAtStepi);\
        \
    \}\
    \
    public int count(int n, int arr[]) \{\
        int countWays = 0;\
        if(n <= 1) \{\
            if(arr[n] == 0) \{\
                arr[n] = 1;\
                return arr[n];\
            \}\
        \}\
        \
        if(arr[n] == 0 ) \{\
            countWays = count(n-1, arr) + count(n-2, arr);\
            arr[n] = countWays;\
            return arr[n];\
        \} else \{\
            return arr[n];\
        \}\
    \}\
\}\
\
reference link: https://www.geeksforgeeks.org/count-ways-reach-nth-stair/\
}