Code 1:
Count ways to reach the n’th stair
class stairs {
    // A simple recursive program to find
    // n'th fibonacci number
    static int fib(int n)
    {
        if (n <= 1)
            return n;
        return fib(n - 1) + fib(n - 2);
    }
 
    // Returns number of ways to reach s'th stair
    static int countWays(int s)
    {
        return fib(s + 1);
    }
 
    /* Driver program to test above function */
    public static void main(String args[])
    {
        int s = 4;
        System.out.println("Number of ways = " + countWays(s));
    }
} 

Dynamic programming:
class Solution {
    public int climbStairs(int n) {
        int storeCountAtStepi[] = new int[n+1];
        return count(n, storeCountAtStepi);
        
    }
    
    public int count(int n, int arr[]) {
        int countWays = 0;
        if(n <= 1) {
            if(arr[n] == 0) {
                arr[n] = 1;
                return arr[n];
            }
        }
        
        if(arr[n] == 0 ) {
            countWays = count(n-1, arr) + count(n-2, arr);
            arr[n] = countWays;
            return arr[n];
        } else {
            return arr[n];
        }
    }
}

reference link: https://www.geeksforgeeks.org/count-ways-reach-nth-stair/
